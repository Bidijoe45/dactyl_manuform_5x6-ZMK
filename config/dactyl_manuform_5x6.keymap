#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define LWR 1
#define RSE 2
#define ADJ 3

/ {
    behaviors {
        F2_F5: F2_F5 {
            compatible = "zmk,behavior-tap-dance";
            label = "F2_F5";
            #binding-cells = <0>;
            bindings = <&kp F2>, <&kp F5>;
        };

        Bracket: Bracket {
            compatible = "zmk,behavior-tap-dance";
            label = "BRACKET";
            #binding-cells = <0>;
            bindings = <&kp LBKT>, <&kp RBKT>;
        };

        DMP: DMP {
            compatible = "zmk,behavior-tap-dance";
            label = "DMP";
            #binding-cells = <0>;
            bindings = <&kp C_VOL_DN>, <&kp C_MUTE>, <&kp C_PREVIOUS>;
        };

        UPN: UPN {
            compatible = "zmk,behavior-tap-dance";
            label = "UPN";
            #binding-cells = <0>;
            bindings = <&kp C_VOLUME_UP>, <&kp C_PLAY_PAUSE>, <&kp C_NEXT>;
        };

        BSLH_GRV: BSLH_GRV {
            compatible = "zmk,behavior-tap-dance";
            label = "BSLH_GRV";
            #binding-cells = <0>;
            bindings = <&kp BSLH>, <&kp GRAVE>;
        };
    };

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&lt 2 ESC  &kp N1  &kp N2            &kp N3         &kp N4            &kp N5                        &kp N6         &kp N7     &kp N8            &kp N9             &kp N0     &kp MINUS
&kp TAB    &kp Q   &kp W             &kp E          &kp R             &kp T                         &kp Y          &kp U      &kp I             &kp O              &kp P      &kp EQUAL
&kp LSHFT  &kp A   &kp S             &kp D          &kp F             &kp G                         &kp H          &kp J      &kp K             &kp L              &kp SEMI   &kp RIGHT_SHIFT
&kp LCTRL  &kp Z   &kp X             &kp C          &kp V             &kp B                         &kp N          &kp M      &kp COMMA         &kp DOT            &kp SLASH  &kp SINGLE_QUOTE
                   &kp SINGLE_QUOTE  &kp BACKSLASH                                                                            &kp LEFT_BRACKET  &kp RIGHT_BRACKET
                                                    &kp LEFT_COMMAND  &trans                        &trans         &kp SPACE
                                                                      &kp LEFT_ALT  &mo 1   &mo 1   &kp BACKSPACE
                                                                      &trans        &trans  &trans  &trans
            >;
        };

        lower_layer {
            bindings = <
&kp F12  &kp F1  &kp F2     &kp F3         &kp F4         &kp F5                         &kp F6      &kp F7    &kp F8    &kp F9     &kp F10  &kp F11
&trans   &trans  &trans     &trans         &trans         &trans                         &trans      &trans    &trans    &trans     &trans   &trans
&trans   &trans  &trans     &kp LG(RIGHT)  &kp LA(RIGHT)  &kp PAGE_UP                    &trans      &kp LEFT  &kp UP    &kp RIGHT  &trans   &kp ENTER
&trans   &trans  &trans     &kp LG(LEFT)   &kp LA(LEFT)   &kp PAGE_DOWN                  &trans      &trans    &kp DOWN  &trans     &trans   &trans
                 &kp GRAVE  &trans                                                                             &kp HOME  &kp END
                                           &trans         &trans                         &trans      &trans
                                                          &trans         &trans  &trans  &kp DELETE
                                                          &trans         &mo 2   &mo 2   &trans
            >;
        };

        raise_layer {
            bindings = <
&bootloader    &bt BT_SEL 0   &bt BT_SEL 1    &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4                   &trans  &trans  &trans  &trans  &trans            &bootloader
&trans         &bt BT_DISC 0  &bt BT_DISC 1   &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4                  &trans  &trans  &trans  &trans  &kp C_PLAY_PAUSE  &kp K_VOL_UP
&trans         &bt BT_CLR     &bt BT_CLR_ALL  &bt BT_NXT     &bt BT_PRV     &trans                         &trans  &trans  &trans  &trans  &kp C_NEXT        &kp K_VOL_DN
&kp LG(LC(Q))  &trans         &trans          &trans         &trans         &trans                         &trans  &trans  &trans  &trans  &kp C_PREVIOUS    &kp K_MUTE
                              &trans          &trans                                                                       &trans  &trans
                                                             &trans         &trans                         &trans  &trans
                                                                            &trans         &trans  &trans  &trans
                                                                            &trans         &trans  &trans  &trans
            >;
        };
    };
};
